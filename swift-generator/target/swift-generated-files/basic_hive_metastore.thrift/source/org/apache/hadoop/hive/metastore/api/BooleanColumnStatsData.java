// Generated by swift-generator from hive/metastore.thrift

package org.apache.hadoop.hive.metastore.api;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("BooleanColumnStatsData")
public final class BooleanColumnStatsData
{
    @ThriftConstructor
    public BooleanColumnStatsData(
        @ThriftField(value=1, name="numTrues", requiredness=Requiredness.REQUIRED) final long numTrues,
        @ThriftField(value=2, name="numFalses", requiredness=Requiredness.REQUIRED) final long numFalses,
        @ThriftField(value=3, name="numNulls", requiredness=Requiredness.REQUIRED) final long numNulls
    ) {
        this.numTrues = numTrues;
        this.numFalses = numFalses;
        this.numNulls = numNulls;
    }

    public static class Builder {
        private long numTrues;

        public Builder setNumTrues(long numTrues) {
            this.numTrues = numTrues;
            return this;
        }
        private long numFalses;

        public Builder setNumFalses(long numFalses) {
            this.numFalses = numFalses;
            return this;
        }
        private long numNulls;

        public Builder setNumNulls(long numNulls) {
            this.numNulls = numNulls;
            return this;
        }

        public Builder() { }
        public Builder(BooleanColumnStatsData other) {
            this.numTrues = other.numTrues;
            this.numFalses = other.numFalses;
            this.numNulls = other.numNulls;
        }

        public BooleanColumnStatsData build() {
            return new BooleanColumnStatsData (
                this.numTrues,
                this.numFalses,
                this.numNulls
            );
        }
    }

    private final long numTrues;

    @ThriftField(value=1, name="numTrues", requiredness=Requiredness.REQUIRED)
    public long getNumTrues() { return numTrues; }

    private final long numFalses;

    @ThriftField(value=2, name="numFalses", requiredness=Requiredness.REQUIRED)
    public long getNumFalses() { return numFalses; }

    private final long numNulls;

    @ThriftField(value=3, name="numNulls", requiredness=Requiredness.REQUIRED)
    public long getNumNulls() { return numNulls; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("numTrues", numTrues)
            .add("numFalses", numFalses)
            .add("numNulls", numNulls)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        BooleanColumnStatsData other = (BooleanColumnStatsData)o;

        return
            Objects.equals(numTrues, other.numTrues) &&
            Objects.equals(numFalses, other.numFalses) &&
            Objects.equals(numNulls, other.numNulls);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            numTrues,
            numFalses,
            numNulls
        });
    }
}
