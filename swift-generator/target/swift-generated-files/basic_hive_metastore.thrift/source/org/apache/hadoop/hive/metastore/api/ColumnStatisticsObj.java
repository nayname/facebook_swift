// Generated by swift-generator from hive/metastore.thrift

package org.apache.hadoop.hive.metastore.api;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("ColumnStatisticsObj")
public final class ColumnStatisticsObj
{
    @ThriftConstructor
    public ColumnStatisticsObj(
        @ThriftField(value=1, name="colName", requiredness=Requiredness.REQUIRED) final String colName,
        @ThriftField(value=2, name="colType", requiredness=Requiredness.REQUIRED) final String colType,
        @ThriftField(value=3, name="statsData", requiredness=Requiredness.REQUIRED) final ColumnStatisticsData statsData
    ) {
        this.colName = colName;
        this.colType = colType;
        this.statsData = statsData;
    }

    public static class Builder {
        private String colName;

        public Builder setColName(String colName) {
            this.colName = colName;
            return this;
        }
        private String colType;

        public Builder setColType(String colType) {
            this.colType = colType;
            return this;
        }
        private ColumnStatisticsData statsData;

        public Builder setStatsData(ColumnStatisticsData statsData) {
            this.statsData = statsData;
            return this;
        }

        public Builder() { }
        public Builder(ColumnStatisticsObj other) {
            this.colName = other.colName;
            this.colType = other.colType;
            this.statsData = other.statsData;
        }

        public ColumnStatisticsObj build() {
            return new ColumnStatisticsObj (
                this.colName,
                this.colType,
                this.statsData
            );
        }
    }

    private final String colName;

    @ThriftField(value=1, name="colName", requiredness=Requiredness.REQUIRED)
    public String getColName() { return colName; }

    private final String colType;

    @ThriftField(value=2, name="colType", requiredness=Requiredness.REQUIRED)
    public String getColType() { return colType; }

    private final ColumnStatisticsData statsData;

    @ThriftField(value=3, name="statsData", requiredness=Requiredness.REQUIRED)
    public ColumnStatisticsData getStatsData() { return statsData; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("colName", colName)
            .add("colType", colType)
            .add("statsData", statsData)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ColumnStatisticsObj other = (ColumnStatisticsObj)o;

        return
            Objects.equals(colName, other.colName) &&
            Objects.equals(colType, other.colType) &&
            Objects.equals(statsData, other.statsData);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            colName,
            colType,
            statsData
        });
    }
}
