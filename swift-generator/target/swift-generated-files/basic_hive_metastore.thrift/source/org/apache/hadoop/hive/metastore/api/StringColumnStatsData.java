// Generated by swift-generator from hive/metastore.thrift

package org.apache.hadoop.hive.metastore.api;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("StringColumnStatsData")
public final class StringColumnStatsData
{
    @ThriftConstructor
    public StringColumnStatsData(
        @ThriftField(value=1, name="maxColLen", requiredness=Requiredness.REQUIRED) final long maxColLen,
        @ThriftField(value=2, name="avgColLen", requiredness=Requiredness.REQUIRED) final double avgColLen,
        @ThriftField(value=3, name="numNulls", requiredness=Requiredness.REQUIRED) final long numNulls,
        @ThriftField(value=4, name="numDVs", requiredness=Requiredness.REQUIRED) final long numDVs
    ) {
        this.maxColLen = maxColLen;
        this.avgColLen = avgColLen;
        this.numNulls = numNulls;
        this.numDVs = numDVs;
    }

    public static class Builder {
        private long maxColLen;

        public Builder setMaxColLen(long maxColLen) {
            this.maxColLen = maxColLen;
            return this;
        }
        private double avgColLen;

        public Builder setAvgColLen(double avgColLen) {
            this.avgColLen = avgColLen;
            return this;
        }
        private long numNulls;

        public Builder setNumNulls(long numNulls) {
            this.numNulls = numNulls;
            return this;
        }
        private long numDVs;

        public Builder setNumDVs(long numDVs) {
            this.numDVs = numDVs;
            return this;
        }

        public Builder() { }
        public Builder(StringColumnStatsData other) {
            this.maxColLen = other.maxColLen;
            this.avgColLen = other.avgColLen;
            this.numNulls = other.numNulls;
            this.numDVs = other.numDVs;
        }

        public StringColumnStatsData build() {
            return new StringColumnStatsData (
                this.maxColLen,
                this.avgColLen,
                this.numNulls,
                this.numDVs
            );
        }
    }

    private final long maxColLen;

    @ThriftField(value=1, name="maxColLen", requiredness=Requiredness.REQUIRED)
    public long getMaxColLen() { return maxColLen; }

    private final double avgColLen;

    @ThriftField(value=2, name="avgColLen", requiredness=Requiredness.REQUIRED)
    public double getAvgColLen() { return avgColLen; }

    private final long numNulls;

    @ThriftField(value=3, name="numNulls", requiredness=Requiredness.REQUIRED)
    public long getNumNulls() { return numNulls; }

    private final long numDVs;

    @ThriftField(value=4, name="numDVs", requiredness=Requiredness.REQUIRED)
    public long getNumDVs() { return numDVs; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("maxColLen", maxColLen)
            .add("avgColLen", avgColLen)
            .add("numNulls", numNulls)
            .add("numDVs", numDVs)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        StringColumnStatsData other = (StringColumnStatsData)o;

        return
            Objects.equals(maxColLen, other.maxColLen) &&
            Objects.equals(avgColLen, other.avgColLen) &&
            Objects.equals(numNulls, other.numNulls) &&
            Objects.equals(numDVs, other.numDVs);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            maxColLen,
            avgColLen,
            numNulls,
            numDVs
        });
    }
}
