// Generated by swift-generator from hive/metastore.thrift

package org.apache.hadoop.hive.metastore.api;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("ColumnStatistics")
public final class ColumnStatistics
{
    @ThriftConstructor
    public ColumnStatistics(
        @ThriftField(value=1, name="statsDesc", requiredness=Requiredness.REQUIRED) final ColumnStatisticsDesc statsDesc,
        @ThriftField(value=2, name="statsObj", requiredness=Requiredness.REQUIRED) final List<ColumnStatisticsObj> statsObj
    ) {
        this.statsDesc = statsDesc;
        this.statsObj = statsObj;
    }

    public static class Builder {
        private ColumnStatisticsDesc statsDesc;

        public Builder setStatsDesc(ColumnStatisticsDesc statsDesc) {
            this.statsDesc = statsDesc;
            return this;
        }
        private List<ColumnStatisticsObj> statsObj;

        public Builder setStatsObj(List<ColumnStatisticsObj> statsObj) {
            this.statsObj = statsObj;
            return this;
        }

        public Builder() { }
        public Builder(ColumnStatistics other) {
            this.statsDesc = other.statsDesc;
            this.statsObj = other.statsObj;
        }

        public ColumnStatistics build() {
            return new ColumnStatistics (
                this.statsDesc,
                this.statsObj
            );
        }
    }

    private final ColumnStatisticsDesc statsDesc;

    @ThriftField(value=1, name="statsDesc", requiredness=Requiredness.REQUIRED)
    public ColumnStatisticsDesc getStatsDesc() { return statsDesc; }

    private final List<ColumnStatisticsObj> statsObj;

    @ThriftField(value=2, name="statsObj", requiredness=Requiredness.REQUIRED)
    public List<ColumnStatisticsObj> getStatsObj() { return statsObj; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("statsDesc", statsDesc)
            .add("statsObj", statsObj)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ColumnStatistics other = (ColumnStatistics)o;

        return
            Objects.equals(statsDesc, other.statsDesc) &&
            Objects.equals(statsObj, other.statsObj);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            statsDesc,
            statsObj
        });
    }
}
