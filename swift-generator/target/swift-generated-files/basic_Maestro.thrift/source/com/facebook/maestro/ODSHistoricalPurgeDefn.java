// Generated by swift-generator from Maestro.thrift

package com.facebook.maestro;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@ThriftStruct("ODSHistoricalPurgeDefn")
public final class ODSHistoricalPurgeDefn
{
    @ThriftConstructor
    public ODSHistoricalPurgeDefn(
        @ThriftField(value=1, name="entity", requiredness=Requiredness.NONE) final String entity,
        @ThriftField(value=2, name="key", requiredness=Requiredness.NONE) final String key,
        @ThriftField(value=3, name="timeStart", requiredness=Requiredness.NONE) final long timeStart,
        @ThriftField(value=4, name="timeEnd", requiredness=Requiredness.NONE) final long timeEnd
    ) {
        this.entity = entity;
        this.key = key;
        this.timeStart = timeStart;
        this.timeEnd = timeEnd;
    }

    public static class Builder {
        private String entity;

        public Builder setEntity(String entity) {
            this.entity = entity;
            return this;
        }
        private String key;

        public Builder setKey(String key) {
            this.key = key;
            return this;
        }
        private long timeStart;

        public Builder setTimeStart(long timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        private long timeEnd;

        public Builder setTimeEnd(long timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }

        public Builder() { }
        public Builder(ODSHistoricalPurgeDefn other) {
            this.entity = other.entity;
            this.key = other.key;
            this.timeStart = other.timeStart;
            this.timeEnd = other.timeEnd;
        }

        public ODSHistoricalPurgeDefn build() {
            return new ODSHistoricalPurgeDefn (
                this.entity,
                this.key,
                this.timeStart,
                this.timeEnd
            );
        }
    }

    private final String entity;

    @ThriftField(value=1, name="entity", requiredness=Requiredness.NONE)
    public String getEntity() { return entity; }

    private final String key;

    @ThriftField(value=2, name="key", requiredness=Requiredness.NONE)
    public String getKey() { return key; }

    private final long timeStart;

    @ThriftField(value=3, name="timeStart", requiredness=Requiredness.NONE)
    public long getTimeStart() { return timeStart; }

    private final long timeEnd;

    @ThriftField(value=4, name="timeEnd", requiredness=Requiredness.NONE)
    public long getTimeEnd() { return timeEnd; }

    @Override
    public String toString()
    {
        return toStringHelper(this)
            .add("entity", entity)
            .add("key", key)
            .add("timeStart", timeStart)
            .add("timeEnd", timeEnd)
            .toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ODSHistoricalPurgeDefn other = (ODSHistoricalPurgeDefn)o;

        return
            Objects.equals(entity, other.entity) &&
            Objects.equals(key, other.key) &&
            Objects.equals(timeStart, other.timeStart) &&
            Objects.equals(timeEnd, other.timeEnd);
    }

    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            entity,
            key,
            timeStart,
            timeEnd
        });
    }
}
